name: deploy

on:
  push:
    branches: [main]
  pull_request:
  schedule:
    - cron: "0 5 * * *"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.8]
        node-version: ["16"]

    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Python dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction --no-root

      - name: Convert notebooks
        run: |
          make notebooks

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Load cached node_modules
        id: cached-node_modules-dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ runner.os }}-${{ hashFiles('**/package*.json') }}

      - name: Install JS deps
        if: steps.cached-node_modules-dependencies.outputs.cache-hit != 'true'
        run: |
          make npm-install

      - name: Build website
        run: |
          make npm-build

      - name: Push website (main)
        uses: jsmrcaga/action-netlify-deploy@master
        if: (github.event_name != 'pull_request') && endsWith(github.ref, '/main')
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_DEPLOY_TO_PROD: true
          build_directory: out

      - name: Push website (branch)
        uses: jsmrcaga/action-netlify-deploy@master
        if: github.event_name == 'pull_request'
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          build_directory: out

      - name: Upload website
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: website
          path: out
