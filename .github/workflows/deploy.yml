name: deploy

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy website

    permissions:
      contents: "read"
      id-token: "write"

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        node-version: ["18"]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      # ------------------------------------------------------------------------
      #  Setup

      - name: JS - Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Load cached node_modules
        id: cached-node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: >
            node_modules
            ${{ runner.os }}
            node-${{ matrix.node-version }}
            ${{ hashFiles('package-lock.json') }}

      - name: Install JS dependencies
        if: steps.cached-node_modules.outputs.cache-hit != 'true'
        run: |
          npm install

      # ------------------------------------------------------------------------
      #  Build

      - name: Build website
        run: |
          npm run build

      # ------------------------------------------------------------------------
      #  Deploy

      - name: Configure GCP auth
        uses: google-github-actions/auth@v1
        with:
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Upload to GCS
        uses: google-github-actions/upload-cloud-storage@v1
        with:
          path: dist
          destination: ${{ secrets.GCP_BUCKET }}
          parent: false
          headers: |-
            cache-control: no-cache

      - name: Upload to GCS (sync)
        run: gsutil rsync -r -d dist gs://${{ secrets.GCP_BUCKET }}

      - name: Configure GSC Cache
        run: |
          gsutil setmeta -r -h "Cache-Control: no-cache" gs://${{ secrets.GCP_BUCKET }}

      - name: Purge Cloudflare Cache
        uses: jakejarvis/cloudflare-purge-action@v0.3.0
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
